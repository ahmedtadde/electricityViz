{
    "collab_server" : "",
    "contents" : "# =========================================================================\n# function libraries\n# @description: load all libraries for project\n# @return: N/A\n# =========================================================================\nlibraries <- function(){\n  library(magrittr)\n  library(data.table)\n  library(dplyr)\n  library(shiny)\n  library(ggvis)\n  library(scales)\n  library(DT)\n  library(markdown)\n  library(foreach)\n}\n\n\n\n\n# =========================================================================\n# function:  color.mapper\n# @description: \n# @return: \n# =========================================================================\n\ncolor.mapper <- function(vector, map, input1,input2,input3){\n  \n  mapper <- function(x){\n    switch(\n      x,\n      input1= map[1],\n      input2= map[2],\n      input3= map[3],\n      map[4]\n    )\n  }\n  \n  return(foreach(i = 1:length(vector), .combine = c) %do% {mapper(vector[i])})\n}\n\n# =========================================================================\n# function:  clean.data\n# @description: Renaming data.table columns, subset and define types of columns \n#               of interest and define column types\n# @return: cleaned data.table\n# =========================================================================\nclean.data <- function(df){\n  columns <- c(\"ID\", \"TDU\", \"REP\", \"PRODUCT\",\n               \"KWH500\", \"KWH1000\", \"KWH2000\",\n               \"FEES\", \"PREPAID\", \"TOU\",\n               \"FIXED\", \"RATE_TYPE\", \"RENEWABLE\",\n               \"TERM_LENGTH\", \"CANCEL_FEE\", \"WEdBSITE\",\n               \"TERMS\", \"TERMS_URL\", \"PROMOTION\", \"PROMOTION_DESCRIPTION\",\n               \"EFL_URL\", \"ENROLL_URL\", \"PREPAID_URL\", \"ENROLL_PHONE\"\n              )\n  \n  setnames(df, names(df)[1:24],  columns)  # rename columns\n  rm(columns)\n  \n  return(\n    \n    df[, .(ID, TDU, REP, PRODUCT,\n           KWH500, KWH1000, KWH2000,\n           RATE_TYPE, TERM_LENGTH, RENEWABLE,\n           PREPAID, TOU, PROMOTION, EFL_URL\n           ) \n       \n      ][,\n        # convert units from $/kWh to c/kWh\n        c(\"KWH500\",\"KWH1000\",\"KWH2000\",\"PREPAID\",\"TOU\",\"PROMOTION\") := list(\n            as.numeric(KWH500) * 100,\n            as.numeric(KWH1000) * 100,\n            as.numeric(KWH2000) * 100,\n            as.logical(PREPAID),\n            as.logical(TOU),\n            as.logical(PROMOTION)\n          )\n      ]\n  )\n}\n\n\n# =========================================================================\n# function get.data\n#\n# @description: get data from url.\n# @return: raw dataframe returned by data.table's fread from provided url.\n# =========================================================================\nget.data <- function(update = NULL) {\n\n  if(is.null(update)){\n    \n    return(setkey(fread(\"./data/data.csv\"), ID))\n    \n  }else{\n    \n    if(update %in% c(\"update\", 1, \"Update\",\"yes\",\"Yes\",\"new\",\"New\"))\n      \n      \"http://www.powertochoose.org/en-us/Plan/ExportToCsv\" %>% \n        \n        fread(\n          header=TRUE, \n          stringsAsFactors=FALSE\n        ) %>% \n        \n        clean.data() %>%\n        \n        fwrite(file=\"./data/data.csv\")\n        \n        return(setkey(fread(\"./data/data.csv\"), ID))\n  }\n}\n\n\n\n# server.R variables and functions\n# -------------------------------------\n# histogram_tooltip helper function\nhistogram_tooltip <- function(data) {\n  if(is.null(data)) return(NULL)\n  sprintf(\"Price: %s - %s c/kWh<br />\n          Count: %s<br />\",\n          round(data$xmin, 1), round(data$xmax, 1),\n          data$stack_upr - data$stack_lwr)\n}",
    "created" : 1494619814199.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "967606116",
    "id" : "97380450",
    "lastKnownWriteTime" : 1494623516,
    "last_content_update" : 1494623516169,
    "path" : "~/GITHUB/electricityViz/data/functions.R",
    "project_path" : "data/functions.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : true,
    "source_window" : "",
    "type" : "r_source"
}